name: publish

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:
    inputs:
      chrome:
        type: boolean
        required: false
        description: Publish to Chrome Web Store
      edge:
        type: boolean
        required: false
        description: Publish to Microsoft Edge Add-ons
      firefox:
        type: boolean
        required: false
        description: Publish to Firefox Browser Add-ons
      upload_only:
        type: choice
        required: true
        description: Upload without publishing
        options: ["true", "false"]

permissions: write-all

concurrency:
  group: "${{ github.workflow }} - ${{ github.head_ref || github.ref }}"
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  build:
    strategy:
      matrix:
        include:
          - browser: chrome
            manifest: mv3
          - browser: firefox
            manifest: mv3
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout
        uses: actions/checkout@v4

      # Install pnpm based on `packageManager` in package.json
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      # Install Node.js
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Build the extension
      - name: Build
        run: |
          pnpm install
          pnpm build --browser ${{ matrix.browser }} --${{ matrix.manifest }} --zip

      # Upload dist artifacts
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.browser }}
          if-no-files-found: error
          overwrite: true
          path: |
            dist/*-${{ matrix.browser }}.zip
            dist/*-${{ matrix.browser }}.crx

  github-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
      - uses: softprops/action-gh-release@v2
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          prerelease: false
          make_latest: true
          files: |
            chrome/*.zip
            firefox/*.zip
            chrome/*.crx
            firefox/*.crx

  chrome-web-store:
    if: ${{ startsWith(github.ref, 'refs/tags/') || inputs.chrome }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: chrome
      - uses: wdzeng/chrome-extension@v1
        with:
          zip-path: download-manager-chrome.zip
          extension-id: ${{ secrets.CHROME_EXT_ID }}
          client-id: ${{ secrets.CHROME_CLIENT_ID }}
          client-secret: ${{ secrets.CHROME_CLIENT_SECRET }}
          refresh-token: ${{ secrets.CHROME_REFRESH_TOKEN }}
          upload-only: ${{ !startsWith(github.ref, 'refs/tags/') && inputs.upload_only }}

  microsoft-edge-add-ons:
    if: ${{ startsWith(github.ref, 'refs/tags/') || inputs.edge }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: chrome
      - uses: wdzeng/edge-addon@v2
        with:
          zip-path: download-manager-chrome.zip
          product-id: ${{ secrets.EDGE_PRODUCT_ID }}
          api-key: ${{ secrets.EDGE_API_KEY }}
          client-id: ${{ secrets.EDGE_CLIENT_ID }}
          upload-only: ${{ !startsWith(github.ref, 'refs/tags/') && inputs.upload_only }}

  firefox-browser-add-ons:
    if: ${{ startsWith(github.ref, 'refs/tags/') || (inputs.firefox && !inputs.upload_only) }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: firefox
      - uses: wdzeng/firefox-addon@v1
        with:
          xpi-path: download-manager-firefox.zip
          source-code-path: download-manager-sources.zip
          addon-guid: ${{ secrets.FIREFOX_ADDON_GUID }}
          jwt-issuer: ${{ secrets.FIREFOX_JWT_ISSUER }}
          jwt-secret: ${{ secrets.FIREFOX_JWT_SECRET }}
